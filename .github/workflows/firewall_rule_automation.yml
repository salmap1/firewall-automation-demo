name: Firewall Rule Automation

on:
  push:
    branches:
      - noc
      - ip

jobs:
  validate_and_apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Run Validation Script
        working-directory: teams/${{ github.ref_name }}
        run: |
          python validate_rules.py
        continue-on-error: false  # Stop the workflow if validation fails

      - name: Archive Old JSON Files
        run: |
          mkdir -p archive/${{ github.ref_name }}
          cp teams/${{ github.ref_name }}/security_rules.json archive/${{ github.ref_name }}/security_rules_old.json
          cp teams/${{ github.ref_name }}/application.json archive/${{ github.ref_name }}/application_old.json
        continue-on-error: false

      - name: Detect Rule Changes
        working-directory: teams/${{ github.ref_name }}
        run: |
          python detect_changes.py

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.11

      - name: Terraform Init
        working-directory: teams/${{ github.ref_name }}
        run: terraform init

      - name: Terraform Apply
        working-directory: teams/${{ github.ref_name }}
        env:
          PALO_ALTO_HOSTNAME: ${{ secrets.PALO_ALTO_HOSTNAME }}
          PALO_ALTO_USERNAME: ${{ secrets.PALO_ALTO_USERNAME }}
          PALO_ALTO_PASSWORD: ${{ secrets.PALO_ALTO_PASSWORD }}
        run: terraform apply -auto-approve


